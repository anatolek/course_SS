sc = (JSON.parse(File.read("system-config.json")))
ac = (JSON.parse(File.read("aws-config.json")))
require 'vagrant-aws'

Vagrant.configure('2') do |config|

  config.vm.box = 'dummy'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'

  config.vm.define 'DB_VM' do |config_db|
    config_db.vm.provider :aws do |db, override|
      db.access_key_id = ac['access_key']
      db.secret_access_key = ac['secret_key']
      db.instance_type = ac['instance_type']
      db.keypair_name = ac['keypair_name']
      db.region = ac['region']
      db.ami = ac['ami']
      db.security_groups = ['sg-3cc2aa51']
      db.subnet_id = ac['subnet_id']
      db.private_ip_address = ac['db']['private_ip']
      db.associate_public_ip = true
      db.block_device_mapping = [{'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => ac['disk_size']}]
      db.tags = {
        'Name'      => ac['db']['tags']['Name'],
        'Role'      => ac['db']['tags']['Role']
                }
      override.ssh.username = ac['ssh_username']
      override.ssh.private_key_path = ac['ssh_private_key_path']
      override.vm.provision :ansible do |ansible|
        ansible.playbook = ac['db']['playbook_path']
        # ansible.verbose = true
        ansible.extra_vars = {
          db_user:              ENV['DB_USER'] || sc['DB_USER'],
          db_pass:              ENV['DB_PASS'] || sc['DB_PASS'],
          db_name:              ENV['DB_NAME'] || sc['DB_NAME'],
          db_port:              ENV['DB_PORT'] || sc['DB_PORT'],
          db_remote_user_hosts: ENV['DB_REMOTE_USER_HOSTS'] || sc['DB_REMOTE_USER_HOSTS'],
          db_host:              ac['db']['private_ip']
        }
      end
    end
  end

  config.vm.define 'APP_VM' do |config_app|
    config_app.vm.provider :aws do |app, override|
      app.access_key_id = ac['access_key']
      app.secret_access_key = ac['secret_key']
      app.instance_type = ac['instance_type']
      app.keypair_name = ac['keypair_name']
      app.region = ac['region']
      app.ami = ac['ami']
      app.security_groups = ['sg-95c4acf8']
      app.subnet_id = ac['subnet_id']
      app.private_ip_address = ac['app']['private_ip']
      app.associate_public_ip = true
      app.block_device_mapping = [{'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => ac['disk_size']}]
      app.tags = {
        'Name'      => ac['app']['tags']['Name'],
        'Role'      => ac['app']['tags']['Role']
                }
      override.ssh.username = ac['ssh_username']
      override.ssh.private_key_path = ac['ssh_private_key_path']
      override.vm.provision :ansible do |ansible|
        ansible.playbook = ac['app']['playbook_path']
        # ansible.verbose = true
        ansible.extra_vars = {
          project_dir:  ENV['PROJECT_DIR'] || sc['PROJECT_DIR'],
          app_user:     ENV['APP_USER'] || sc['APP_USER'],
          app_pass:     ENV['APP_PASS'] || sc['APP_PASS'],
          db_user:      ENV['DB_USER'] || sc['DB_USER'],
          db_pass:      ENV['DB_PASS'] || sc['DB_PASS'],
          db_name:      ENV['DB_NAME'] || sc['DB_NAME'],
          db_port:      ENV['DB_PORT'] || sc['DB_PORT'],
          db_host:      ac['db']['private_ip']
        }
      end
    end
  end
end
